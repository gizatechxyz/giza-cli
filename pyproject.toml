[tool.poetry]
name = "giza-cli"
version = "0.18.1"
description = "CLI for interacting with Giza"
authors = ["Gonzalo Mellizo-Soto <gonzalo@gizatech.xyz>"]
readme = "README.md"
packages = [{include = "giza"}]

[tool.poetry.scripts]
giza = "giza.cli.cli:entrypoint"

[tool.setuptools.package-data]
"giza-cli" = ["py.typed"]

[tool.poetry.dependencies]
python = "^3.11"
requests = ">=2.30.1,<3.0.0"
tenacity = ">=8.2.2,<=9.0.0"
click = ">=8.1.0,<9.0.0"
rich = "^13"
typer = {version = "*", extras = ["all"]}
cryptography = ">=43.0.0,<44.0.0"
python-jose = {version = "^3.3.0", extras = ["cryptography"]}
email-validator = "^2.0.0.post2"
types-python-jose = "^3.3.4.8"
types-requests = "^2.31.0.2"
cookiecutter = "^2.5.0"
semver = "^3.0.2"
pydantic = "^2"

[tool.poetry.group.dev.dependencies]
pre-commit = "^3.3.3"
black = "^24.3.0"
isort = {extras = ["pyproject"], version = "^5.12.0"}
pytest = "^7.3.2"
pytest-cov = "^4.1.0"
mypy = "^1.4.0"
ruff = "0.0.276"
lazydocs = "^0.4.8"
ipykernel = "^6.27.1"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.isort]
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
line_length = 88

[tool.ruff]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "C",  # flake8-comprehensions
    "B",  # flake8-bugbear
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.mypy]
namespace_packages = true
explicit_package_bases = true

# Bumpversion configuration
[tool.poetry_bumpversion.file."giza/cli/__init__.py"]

[tool.poetry_bumpversion.file."docs/README.md"]

[tool.poetry_bumpversion.file."examples/mnist/requirements.txt"]
search = 'giza-cli=={current_version}'
replace = 'giza-cli=={new_version}'

[tool.poetry_bumpversion.file."docs/examples/full_transpilation.md"]
search = 'giza-cli=={current_version}'
replace = 'giza-cli=={new_version}'

[tool.poetry_bumpversion.file."examples/mnist/mnist_pytorch.ipynb"]
search = 'giza-cli=={current_version}'
replace = 'giza-cli=={new_version}'
